{{- define "lib-common.storage.class" -}}
{{- $top := first . }}
{{- $inputStorageClass := index . 1 -}}
{{- default $top.Values.global.storageClass $inputStorageClass -}}
{{- end -}}

{{- define "lib-common.storage.volume.pvc" }}
{{- $top := first . }}
{{- $k := index . 1 }}
{{- $v := index . 2 }}
{{- if $v.enabled }}
- name: {{ $k }}
  persistentVolumeClaim:
    claimName: {{ $v.existingClaim | default (printf "%s-%s" (include "app.fullname" $top) $k) }}
{{- else }}
- name: {{ $k }}
{{- if $v.mediumMemory }}
  emptyDir: 
    medium: Memory
    sizeLimit: {{ $v.size | quote }}
{{- else }}
  emptyDir: {}
{{- end }}  
{{- end }}
{{- end }}

{{- define "lib-common.storage.volume.configmap" }}
{{- $top := first . }}
{{- $k := index . 1 }}
{{- $v := index . 2 }}
- name: {{ $k }}
  configMap:
    name: {{ $v.existingConfigmap | default (printf "%s-%s" (include "app.fullname" $top) $k) }}
{{- end }}

{{- define "lib-common.storage.volume.nfs" }}
{{- $top := first . }}
{{- $k := index . 1 }}
{{- $v := index . 2 }}
- name: {{ $k }}
  nfs:
    path: {{ $v.path }}
    server: {{ $v.server }}
{{- end }}

{{- define "lib-common.storage.volume.hostpath" }}
{{- $top := first . }}
{{- $k := index . 1 }}
{{- $v := index . 2 }}
- name: {{ $k }}
  hostPath:
    path: {{ $v.path }}
    type: {{ default "DirectoryOrCreate" $v.mode }}
{{- end }}

{{- define "lib-common.storage.volumes" }}
{{- range $k, $v := .Values.volumes }}
  {{- if eq $v.type "pvc" }}
    {{- include "lib-common.storage.volume.pvc" (list $ $k $v) }}
  {{- else if eq $v.type "configmap" }}
    {{- include "lib-common.storage.volume.configmap" (list $ $k $v) }}
  {{- else if eq $v.type "nfs" }}
    {{- include "lib-common.storage.volume.nfs" (list $ $k $v) }}
  {{- else if eq $v.type "hostPath" }}
    {{- include "lib-common.storage.volume.hostpath" (list $ $k $v) }}
  {{- end }}
{{- end }}
{{- end }}
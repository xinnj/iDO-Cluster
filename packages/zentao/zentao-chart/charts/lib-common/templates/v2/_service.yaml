{{/*
Usage: include "lib-common.service.lb.annotations" (dict "provider" "" "lbId" "" ctx .)
*/}}
{{- define "lib-common.service.lb.annotations" -}}
{{- if .lbId }}
  {{- if eq .provider "tke" }}
service.kubernetes.io/loadbalance-id: {{ .lbId }}
service.kubernetes.io/qcloud-share-existed-lb: "true"
service.kubernetes.io/service.extensiveParameters: '{"AddressIPVersion":"IPV4"}'
service.kubernetes.io/tke-existed-lbid: {{ .lbId }}
  {{- else if .provider "ack" }}
demo/ack: {{ .lbId }}
  {{- end }}
{{- end }}
{{- end -}}


{{/*
Usage: include "lib-common.service.v2.tpl" (dict "name" "" "service" .service "ports" .ports "values" .Values "ctx" .)
*/}}
{{- define "lib-common.service.v2.tpl" -}}

{{- $serviceType := default "ClusterIP" .service.type -}}

{{- if .service.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ default (include "lib-common.name.fullname" .ctx) .name }}
  namespace: {{ .ctx.Release.Namespace | quote }}
  labels: {{- include "lib-common.labels.standard" .ctx | nindent 4 }}
    {{- if .service.labels }}
{{ toYaml .service.labels | indent 4 }}
    {{- end }}
  annotations: {{ if .service.annotations }}{{ toYaml .service.annotations | nindent 4 }}{{ end }}
    {{- if and (eq $serviceType "LoadBalancer") }}
    {{- include "lib-common.service.lb.annotations" (dict
        "provider" .values.global.cloudProvider
        "lbId" (default .values.global.cloudLoadBalancerId .service.cloudLoadBalancerId)
        "ctx" .ctx) | indent 4 }}
    {{- end }}
spec:
  selector:
    app: {{ template "app.name" .ctx }}
    release: {{ .ctx.Release.Name | quote }}
    component: {{ default .ctx.Chart.Name .ctx.Component.Name }}
  type: {{ $serviceType }}
  {{- if and (or (eq $serviceType "LoadBalancer") (eq $serviceType "NodePort")) (not (empty .service.externalTrafficPolicy)) }}
  externalTrafficPolicy: {{ .service.externalTrafficPolicy | quote }}
  {{- end }}
  ports:
    {{- range (default .ports .service.ports) }}
    {{- if ne .name "probe" }}
    - name: {{ default .port .name | quote }}
      port: {{ .port }}
      protocol: {{ .protocol | default "tcp" | upper }}
      targetPort: {{ default .port .targetPort }}
      {{- if (and (or (eq $serviceType "NodePort") (eq $serviceType "LoadBalancer")) (not (empty .nodePort))) }}
      nodePort: {{ .nodePort }}
      {{- end }}
    {{- end }}
    {{- end }}
{{- end -}}
{{- end -}}

{{- define "lib-common.service.v2" -}}
{{- include "lib-common.values.merge" . -}}
{{- if not (or .Values.global.stoped .Values.global.stopped) }}
{{- $values := default .Values .Component.Values -}}
{{- include "lib-common.service.v2.tpl" (dict "service" $values.service "ports" $values.ports "values" $values "ctx" .) -}}
{{- end }}
{{- end -}}
